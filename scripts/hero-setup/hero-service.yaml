heat_template_version: 2015-10-15

description: > 
  This template creates Hero VMs

parameters:
  count:
    description: Number of VMs
    type: number
    default: 1

  name:
    type: string
    description: Name of VM prefix

  flavor:
    type: string
    description: name of the flavor

  public_network:
    type: string
    description: public network name or id

  image:
    type: string
    description: image name or id

  image_trusty:
    type: string
    description: image name or id

  key_name:
    type: string
    description: Name of key-pair to be used

  net_id:
    type: string
    description: Name or ID of private network

  security_group:
    type: string
    description: Name or ID of security group

  neutrino_vip:
    type: string
    description: VxRack Neutrino Virtual IP

resources:

  mysql_node:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: count}
      resource_def:
        type: Lib::MSG::MySQLNode
        properties:
          image: { get_param: image }
          flavor: {get_param: flavor }
          key_name: {get_param: key_name}
          net_id: { get_param: net_id }
          public_network: { get_param: public_network }
          security_group: { get_param: security_group }
          name:
            str_replace:
              template:
                $name-$index
              params:
                $name: { get_param: name }
                $index: "%index%"

  engine_node:
    type: OS::Heat::ResourceGroup
    depends_on: mysql_node
    properties:
      count: { get_param: count}
      resource_def:
        type: Lib::MSG::EngineNode
        properties:
          image: { get_param: image }
          flavor: {get_param: flavor }
          key_name: {get_param: key_name}
          net_id: { get_param: net_id }
          public_network: { get_param: public_network }
          security_group: { get_param: security_group }
          mysql_ip: { get_attr: [mysql_node, ip] }
          name:
            str_replace:
              template:
                $name-$index
              params:
                $name: { get_param: name }
                $index: "%index%"


  web_node:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: count}
      resource_def:
        type: Lib::MSG::WebNode
        properties:
          image: { get_param: image }
          flavor: {get_param: flavor }
          key_name: {get_param: key_name}
          net_id: { get_param: net_id }
          neutrino_vip: { get_param: neutrino_vip }
          public_network: { get_param: public_network }
          security_group: { get_param: security_group }
          name:
            str_replace:
              template:
                $name-$index
              params:
                $name: { get_param: name }
                $index: "%index%"

  imagebuilder_node:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: count}
      resource_def:
        type: Lib::MSG::ImageBuilderNode
        properties:
          image: { get_param: image_trusty }
          flavor: {get_param: flavor }
          key_name: {get_param: key_name}
          net_id: { get_param: net_id }
          public_network: { get_param: public_network }
          security_group: { get_param: security_group }
          name:
            str_replace:
              template:
                $name-$index
              params:
                $name: { get_param: name }
                $index: "%index%"


outputs:
  mysql_ip:
    value: {get_attr: [mysql_node, ip] }

